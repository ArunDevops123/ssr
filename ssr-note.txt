SERVER SIDE RENDERING
*********************
LINK
*****
https://www.pluralsight.com/guides/how-to-partly-server-side-render-in-react

1.) npx create-react-app test5

2.)App.js -->

import React from 'react';

const App = () => {
  return (
    <div className="app">
      <h2>hello from app!</h2>
    </div>
  );
}

export default App;

3.)index.js --->

import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

ReactDOM.hydrate(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


4.)npm install -g express

5.)npm install -g @babel/register @babel/preset-env @babel/preset-react ignore-styles

structure
**********

react-ssr-app
├── src                     -- src folder
└── server                    -- server folder
    ├── server.js            -- server-side rendering code
    ├── index.js               -- entry point for the server
	
	

6.)server.js --->


const path=require('path');
const fs=require('fs');
const express=require('express');
const React=require('react');
const ReactDOMServer=require('react-dom/server');
import App from '../src/App'

const PORT = 8080
const app = express()
const router = express.Router()

const serverRenderer = (req, res, next) => {
  fs.readFile(path.resolve('./build/index.html'), 'utf8', (err, data) => {
    if (err) {
      console.error(err)
      return res.status(500).send('An error occurred')
    }
    return res.send(
      data.replace(
        '<div id="root"></div>',
        `<div id="root">${ReactDOMServer.renderToString(<App />)}</div>`
      )
    )
  })
}
router.use('^/$', serverRenderer)

router.use(
  express.static(path.resolve(__dirname, '..', 'build'))
)

app.use(router)

app.listen(PORT, () => {
  console.log(`SSR running on port ${PORT}`)
})

7.)index.js --->

require('ignore-styles')

require('@babel/register')({
  ignore: [/(node_modules)/],
  presets: ['@babel/preset-env', '@babel/preset-react']
})

require('./server')


8.)npm run build

9.)node server/index.js

OUTPUT --> SSR running on port 8080

10.)localhost:8080	--> Browser
	
